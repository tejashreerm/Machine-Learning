}
}
train_data()
runif(100)
samples = replicate(1000,sample(train$x1, 100, replace =TRUE))
View(samples)
samples = replicate(1000,sample(train$x2, 100, replace =TRUE))
samples1 = replicate(1000,sample(train$x1, 100, replace =TRUE))
samples2 = replicate(1000,sample(train$x2, 100, replace =TRUE))
View(samples1)
View(samples2)
samples3 = replicate(1000,sample(train, 100, replace =TRUE))
View(samples3)
as.data.frame(samples3)
x1<-runif(1000)
x2<-runif(1000)
tr_data <- cbind(x1, x2)
samples3 = replicate(1000,sample(tr_data, 100, replace =TRUE))
View(samples3)
y<-as.numeric(x1<x2)
trlabels<-as.factor(y)
?replicate
x1<-runif(1000)
x2<-runif(1000)
tr_data <- cbind(x1, x2)
tr_data <- cbind.data.frame(x1, x2)
iterations <- 10
subset_size <- 100
samples_list = replicate(n = iterations,
expr = {tr_data[sample(nrow(df), subset_size),]},
simplify = F)
samples_list = replicate(n = iterations,
expr = {tr_data[sample(nrow(tr_data), subset_size),]},
simplify = F)
View(samples_list)
samples_list[[1]]
samples_list[[2]]
samples_list[[3]]
samples_list[[4]]
samples_list[[5]]
samples_list[[6]]
samples_list[[7]]
samples_list[[8]]
samples_list[[9]]
samples_list[[10]]
x1<-runif(100)
x2<-runif(100)
trdata<-cbind(x1,x2)
set.seed(1234)
x1<-runif(1000)
x2<-runif(1000)
tedata<-cbind(x1,x2)
x1<-runif(100)
x2<-runif(100)
tr_data <- cbind.data.frame(x1, x2)
x1<-runif(100)
x2<-runif(100)
tr_data <- cbind.data.frame(x1, x2)
y <- as.numeric(x1 < x2)
trlabels <- as.factor(y)
train <- cbind.data.frame(trdata, 'y'=trlabels)
train <- cbind.data.frame(tr_data, 'y'=trlabels)
View(tr_data)
View(train)
iterations <- 10
subset_size <- 100
samples_list1 = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
samples_list1[[1]]
samples_list1[[2]]
samples_list1[[3]]
samples_list1[[4]]
samples_list1[[5]]
samples_list1[[6]]
samples_list1[[7]]
samples_list1[[8]]
samples_list1[[9]]
samples_list1[[10]]
set.seed(1234)
x1<-runif(1000)
x2<-runif(1000)
tedata<-cbind(x1,x2)
y<-as.numeric(x1<x2)
telabels<-as.factor(y)
test <- cbind.data.frame(tedata, 'y'=telabels)
randomForest(y~., data = samples_list1, ntree = 1,
nodesize = 25, keep.forest = TRUE)
library(randomForest)
randomForest(y~., data = samples_list1, ntree = 1,nodesize = 25, keep.forest = TRUE)
randomForest(y~., data = samples_list1[1], ntree = 1,nodesize = 25, keep.forest = TRUE)
x1<-runif(100)
x2<-runif(100)
trdata<-cbind(x1,x2)
y<-as.numeric(x1<x2)
trlabels<-as.factor(y)
train_data <- function(){
x1 <- c()
x2 <-c()
y <- c()
trdata <- c()
trlabels <- c()
for (i in 1:10) {
x1[i] <-runif(100)
x2[i] <-runif(100)
#trdata[i] <- cbind.data.frame(x1[i],x2[i])
#trlabels[i] <- as.factor(as.numeric(x1[i] < x2[i]))
#train <- cbind.data.frame(trdata[i], 'y'=trlabels[i])
print(paste('dataset = ', i,
"train_data = ", x1[i],
"train_labels = ", x2[i]))
#return(x1[i], x2[i])
}
}
train_data()
as.data.frame(samples_list1[[1]])
a1 <- as.data.frame(samples_list1[[1]])
a1
randomForest(y~., data = a1, ntree = 1,nodesize = 25, keep.forest = TRUE)
model <- randomForest(y~., data = a1, ntree = 1,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a1)
con_mat <- table(a1$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
model <- randomForest(y~., data = a1, ntree = 1,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a1)
con_mat <- table(a1$y, pred)
MSR_train <- 1-sum(diag(con_mat))/sum(con_mat)
MSR_train
model <- randomForest(y~., data = a1, ntree = 10,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a1)
con_mat <- table(a1$y, pred)
MSR_train <- 1-sum(diag(con_mat))/sum(con_mat)
MSR_train
model <- randomForest(y~., data = a1, ntree = 100,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a1)
con_mat <- table(a1$y, pred)
MSR_train <- 1-sum(diag(con_mat))/sum(con_mat)
MSR_train
for (i in 1:10) {
a[i] <- samples_list1[i]
}
a <- c()
for (i in 1:10) {
a[i] <- samples_list1[i]
}
View(a)
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
model <- randomForest(y~., data = a[i], ntree = c(1,10,100),
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a[i])
con_mat <- table(a[i]$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', i,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
Model1()
Model1(a)
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
model <- randomForest(y~., data = a[i], ntree = c(1,10,100),
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a[i])
con_mat <- table(a[i]$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', i,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
model <- randomForest(y~., data = a[i], ntree = c(1,10,100),
nodesize = 25, keep.forest = TRUE)
#pred <- predict(model, newdata = a[i])
#con_mat <- table(a[i]$y, pred)
#MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', i,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = a[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
#pred <- predict(model, newdata = a[i])
#con_mat <- table(a[i]$y, pred)
#MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = a[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
#pred <- predict(model, newdata = a[i])
#con_mat <- table(a[i]$y, pred)
#MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = a[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a[i])
con_mat <- table(a[i]$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
a[i]$y
pred
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = a[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a[i])
con_mat <- table(a[i]$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
View(a)
a1 <- as.data.frame(samples_list1[[1]])
a1
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = a1, ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = a1)
con_mat <- table(a1$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
samples_list <- list()
samples_list = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = samples_list[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = samples_list[i])
con_mat <- table(samples_list[i]$y, pred)
MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
samples_list <- list()
samples_list = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = samples_list[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
#pred <- predict(model, newdata = samples_list[i])
#con_mat <- table(samples_list[i]$y, pred)
#MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
samples_list <- list()
samples_list = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = samples_list[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
#pred <- predict(model, newdata = samples_list[i])
#con_mat <- table(samples_list[i]$y, pred)
#MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('Number of trees = ', k,
#"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
Model1 <- function(){
MSR_train <- c()
MSR_test <- c()
samples_list <- list()
samples_list = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = samples_list[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
#pred <- predict(model, newdata = samples_list[i])
#con_mat <- table(samples_list[i]$y, pred)
#MSR_train[i] <- 1-sum(diag(con_mat))/sum(con_mat)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('dataset_number=',i,
'Number of trees = ', k,
#"error_Train = ", MSR_train[i],
"error_Test = ", MSR_test[i]))
}
}
}
Model1()
x1<-runif(100)
x2<-runif(100)
tr_data <- cbind.data.frame(x1, x2)
y <- as.numeric(x1 < x2)
trlabels <- as.factor(y)
train <- cbind.data.frame(tr_data, 'y'=trlabels)
set.seed(1234)
x1<-runif(1000)
x2<-runif(1000)
tedata<-cbind(x1,x2)
y<-as.numeric(x1<x2)
telabels<-as.factor(y)
test <- cbind.data.frame(tedata, 'y'=telabels)
iterations <- 100
subset_size <- 100
Model1 <- function(){
MSR_test <- c()
train_dataset <- list()
train_dataset = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = train_dataset[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('dataset_number=',i,
'Number of trees = ', k,
'error_Test = ', MSR_test[i]))
}
}
}
Model1()
x1<-runif(100)
x2<-runif(100)
tr_data <- cbind.data.frame(x1, x2)
y <- as.numeric(x1 < x2)
trlabels <- as.factor(y)
train <- cbind.data.frame(tr_data, 'y'=trlabels)
set.seed(1234)
x1<-runif(1000)
x2<-runif(1000)
tedata<-cbind(x1,x2)
y<-as.numeric(x1<x2)
telabels<-as.factor(y)
test <- cbind.data.frame(tedata, 'y'=telabels)
iterations <- 1000
subset_size <- 100
Model1 <- function(){
MSR_test <- c()
train_dataset <- list()
train_dataset = replicate(n = iterations,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = train_dataset[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('dataset_number=',i,
'Number of trees = ', k,
'error_Test = ', MSR_test[i]))
}
}
}
Model1()
x1<-runif(100)
x2<-runif(100)
tr_data <- cbind.data.frame(x1, x2)
y <- as.numeric(x1 < x2)
trlabels <- as.factor(y)
train <- cbind.data.frame(tr_data, 'y'=trlabels)
set.seed(1234)
x1<-runif(1000)
x2<-runif(1000)
tedata<-cbind(x1,x2)
y<-as.numeric(x1<x2)
telabels<-as.factor(y)
test <- cbind.data.frame(tedata, 'y'=telabels)
iterations <- 100
subset_size <- 100
Model1 <- function(){
MSR_test <- c()
train_dataset <- list()
train_dataset = replicate(n = 1000,
expr = {train[sample(nrow(train), subset_size),]},
simplify = F)
for (i in 1:10) {
for (k in c(1,10,100)) {
model <- randomForest(y~., data = train_dataset[i], ntree = k,
nodesize = 25, keep.forest = TRUE)
pred <- predict(model, newdata = test)
con_mat <- table(test$y, pred)
MSR_test[i] <- 1-sum(diag(con_mat))/sum(con_mat)
print(paste('dataset_number=',i,
'Number of trees = ', k,
'error_Test = ', MSR_test[i]))
}
}
}
Model1()
